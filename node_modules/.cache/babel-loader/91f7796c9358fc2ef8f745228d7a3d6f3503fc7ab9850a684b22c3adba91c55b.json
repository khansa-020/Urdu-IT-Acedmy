{"ast":null,"code":"var _jsxFileName = \"D:\\\\Urdu IT Acedmy\\\\uitareact\\\\src\\\\Courses\\\\Certificates\\\\Certificates.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Certificate from './Certificate/Certificate';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport globalVar from '../../globalVar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Certificates extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      certificatesArray: [],\n      courseId: window.location.pathname.split(\"/\").pop(),\n      vendorId: props.id\n      // courseId: 7,\n    };\n\n    // console.log(\"api\", this.state.certificatesArray )\n  }\n  componentDidMount() {\n    const {\n      id\n    } = this.props;\n    const {\n      courseName\n    } = this.props.courseName;\n    console.log(\"courseName K\", this.props.courseName);\n    this.loadAvailableExams(id);\n  }\n  loadAvailableExams(vendorId) {\n    const {\n      page\n    } = this.state;\n    // console.log( \"this.state\", this.state)\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        vendorId: vendorId\n      })\n    };\n    // Fetching data from FaceBook Jest Repo\n    fetch(globalVar.url + 'certificates', requestOptions).then(res => res.json()).then(response => {\n      // console.log(\"RRRRRRRRR\", response.data)\n      // const filteredCertificate = response.data.filter(e => {\n      //     return e.certificationId == this.state.vendorId\n      // });\n      this.setState({\n        certificatesArray: response.data\n      }, () => console.log(\"Certificates\", this.state.certificatesArray));\n    }).catch(error => console.log(error));\n  }\n  render() {\n    const {\n      certificatesArray\n    } = this.state;\n\n    // const { id } = this.props;\n    // console.log(\"this.props.id\", id )\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: certificatesArray.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"section section-courses inner-page\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: certificatesArray.map((e, index) => /*#__PURE__*/_jsxDEV(Col, {\n                sm: 6,\n                lg: 4,\n                xl: 3,\n                children: e && /*#__PURE__*/_jsxDEV(Certificate, {\n                  vendorId: e.vendorId,\n                  certificationId: e.certificationId,\n                  certification_Name: e.certification_Name,\n                  status: e.status,\n                  detail: e.detail,\n                  instructor_id: e.instructor_id\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 53\n                }, this)\n              }, e.certificationId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : ''\n    }, void 0, false);\n  }\n}\nCertificates.propTypes = {};\nexport default Certificates;","map":{"version":3,"names":["PropTypes","React","Component","Link","Certificate","Container","Row","Col","Image","Button","globalVar","jsxDEV","_jsxDEV","Fragment","_Fragment","Certificates","constructor","props","state","certificatesArray","courseId","window","location","pathname","split","pop","vendorId","id","componentDidMount","courseName","console","log","loadAvailableExams","page","requestOptions","method","headers","body","JSON","stringify","fetch","url","then","res","json","response","setState","data","catch","error","render","children","length","className","map","e","index","sm","lg","xl","certificationId","certification_Name","status","detail","instructor_id","fileName","_jsxFileName","lineNumber","columnNumber","propTypes"],"sources":["D:/Urdu IT Acedmy/uitareact/src/Courses/Certificates/Certificates.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Certificate from './Certificate/Certificate';\r\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\r\n\r\nimport globalVar from '../../globalVar';\r\n\r\nexport class Certificates extends Component {\r\n    static propTypes = {}\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            certificatesArray: [],\r\n            courseId: window.location.pathname.split(\"/\").pop(),\r\n            vendorId: props.id,\r\n            // courseId: 7,\r\n        };\r\n\r\n        // console.log(\"api\", this.state.certificatesArray )\r\n        \r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { id } = this.props;\r\n        const { courseName } = this.props.courseName;\r\n        console.log( \"courseName K\", this.props.courseName)\r\n        this.loadAvailableExams(id);\r\n    }\r\n\r\n    loadAvailableExams(vendorId) {\r\n        const { page } = this.state;\r\n        // console.log( \"this.state\", this.state)\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ vendorId: vendorId })\r\n        };\r\n        // Fetching data from FaceBook Jest Repo\r\n        fetch( globalVar.url + 'certificates', requestOptions )\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                // console.log(\"RRRRRRRRR\", response.data)\r\n                // const filteredCertificate = response.data.filter(e => {\r\n                //     return e.certificationId == this.state.vendorId\r\n                // });\r\n                this.setState(\r\n                    { certificatesArray: response.data },\r\n                    () => console.log(\"Certificates\", this.state.certificatesArray)\r\n                );\r\n            }\r\n            )\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    render() {\r\n        const { certificatesArray } = this.state;\r\n\r\n        \r\n        // const { id } = this.props;\r\n        // console.log(\"this.props.id\", id )\r\n\r\n        return (\r\n            <>\r\n\r\n                {\r\n                    certificatesArray.length > 0 ?\r\n                        <>\r\n                            <section className=\"section section-courses inner-page\">\r\n                                <Container>\r\n                                    {/* <h2 className=\"title mb-4\">Available exam courses</h2> */}\r\n                                    <Row>\r\n\r\n                                        {certificatesArray.map((e, index) => (\r\n\r\n                                            <Col sm={6} lg={4} xl={3} key={e.certificationId}>\r\n                                                {e && (\r\n                                                    <Certificate\r\n                                                        key={index}\r\n                                                        vendorId={e.vendorId}\r\n                                                        certificationId={e.certificationId}\r\n                                                        certification_Name={e.certification_Name}\r\n                                                        status={e.status}\r\n                                                        detail={e.detail}\r\n                                                        instructor_id={e.instructor_id}\r\n\r\n                                                    />\r\n                                                )}\r\n                                            </Col>\r\n                                        ))}\r\n                                    </Row>\r\n\r\n                                </Container>\r\n                            </section>\r\n                        </>\r\n                        : ''\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Certificates"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
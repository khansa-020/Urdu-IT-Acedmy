{"ast":null,"code":"var _jsxFileName = \"D:\\\\Urdu IT Acedmy\\\\uitareact\\\\src\\\\Courses\\\\AvailableExams\\\\AvailableExams.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Exam from './Exam/Exam';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport globalVar from '../../globalVar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class AvailableExams extends Component {\n  // static propTypes = {}\n  constructor() {\n    super();\n    this.state = {\n      examsArray: [],\n      certificationId: window.location.pathname.split(\"/\").pop()\n      // certificationId: this.props.certificationId,\n      // certificationId: 7,\n    };\n\n    // console.log(\"api\", this.state.examsArray )\n  }\n  componentDidMount() {\n    this.loadAvailableExams();\n  }\n  loadAvailableExams() {\n    const {\n      page\n    } = this.state;\n    // Fetching data from FaceBook Jest Repo\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        certificationId: 4\n      })\n    };\n    fetch(globalVar.url + 'available_exam', requestOptions).then(res => res.json()).then(response => {\n      // const filteredExams = response.data.filter(e => {\n      //     return e.certificationId == this.state.certificationId\n      // });\n      this.setState({\n        examsArray: response.data\n      }, () => console.log(\"Available Exams\", this.state.examsArray));\n    }).catch(error => console.log(error));\n  }\n  render() {\n    const {\n      examsArray\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: examsArray.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"section section-courses inner-page\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"title mb-4\",\n              children: \"Available exam courses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: examsArray.map((e, index) => /*#__PURE__*/_jsxDEV(Col, {\n                sm: 6,\n                lg: 4,\n                xl: 3,\n                children: e && /*#__PURE__*/_jsxDEV(Exam, {\n                  examId: e.examId,\n                  certificationId: e.certificationId,\n                  exam_Name: e.exam_Name,\n                  status: e.status\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 53\n                }, this)\n              }, e.examId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : ''\n    }, void 0, false);\n  }\n}\nexport default AvailableExams;","map":{"version":3,"names":["PropTypes","React","Component","Link","Exam","Container","Row","Col","Image","Button","globalVar","jsxDEV","_jsxDEV","Fragment","_Fragment","AvailableExams","constructor","state","examsArray","certificationId","window","location","pathname","split","pop","componentDidMount","loadAvailableExams","page","requestOptions","method","headers","body","JSON","stringify","fetch","url","then","res","json","response","setState","data","console","log","catch","error","render","children","length","className","fileName","_jsxFileName","lineNumber","columnNumber","map","e","index","sm","lg","xl","examId","exam_Name","status"],"sources":["D:/Urdu IT Acedmy/uitareact/src/Courses/AvailableExams/AvailableExams.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Exam from './Exam/Exam';\r\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\r\n\r\nimport globalVar from '../../globalVar'; \r\n\r\nexport class AvailableExams extends Component {\r\n    // static propTypes = {}\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            examsArray: [],\r\n            certificationId: window.location.pathname.split(\"/\").pop(),\r\n            // certificationId: this.props.certificationId,\r\n            // certificationId: 7,\r\n        };\r\n\r\n        // console.log(\"api\", this.state.examsArray )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAvailableExams();\r\n    }\r\n\r\n    loadAvailableExams() {\r\n        const { page } = this.state;\r\n        // Fetching data from FaceBook Jest Repo\r\n        \r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ certificationId: 4 })\r\n        };\r\n        \r\n        fetch(globalVar.url + 'available_exam', requestOptions)\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                // const filteredExams = response.data.filter(e => {\r\n                //     return e.certificationId == this.state.certificationId\r\n                // });\r\n                this.setState(\r\n                    { examsArray: response.data },\r\n                    () => console.log(\"Available Exams\", this.state.examsArray)\r\n                );\r\n            }\r\n            )\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    render() {\r\n        const { examsArray } = this.state;\r\n\r\n        return (\r\n            <>\r\n\r\n                {\r\n                    examsArray.length > 0 ?\r\n                        <>\r\n                            <section className=\"section section-courses inner-page\">\r\n                                <Container>\r\n                                    <h2 className=\"title mb-4\">Available exam courses</h2>\r\n                                    <Row>\r\n\r\n                                        {examsArray.map((e, index) => (\r\n\r\n                                            <Col sm={6} lg={4} xl={3} key={e.examId}>\r\n                                                {e && (\r\n                                                    <Exam\r\n                                                        key={index}\r\n                                                        examId={e.examId}\r\n                                                        certificationId={e.certificationId}\r\n                                                        exam_Name={e.exam_Name}\r\n                                                        status={e.status}\r\n\r\n                                                    />\r\n                                                )}\r\n                                            </Col>\r\n                                        ))}\r\n                                    </Row>\r\n\r\n                                </Container>\r\n                            </section>\r\n                        </>\r\n                        : ''\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AvailableExams"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Urdu IT Acedmy\\\\uitareact\\\\src\\\\FAQ\\\\FAQ.js\";\n// import PropTypes from 'prop-types'\nimport React, { Component } from 'react';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport { Link } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './FAQ.scss';\nimport globalVar from '../globalVar';\n\n//Bootstrap\nimport { Container, Breadcrumb } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class FAQ extends Component {\n  constructor() {\n    super();\n    this.fetchData = async () => {\n      // Set loading state\n      this.setState({\n        isLoading: true\n      });\n      try {\n        // Make API call\n        const response = await fetch(globalVar.url + 'faq');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        // Parse JSON response\n        const responseData = await response.json();\n\n        // Update component state with fetched data and last fetch time\n        this.setState({\n          data: responseData.data,\n          isLoading: false,\n          lastFetchTime: new Date(),\n          error: null\n        });\n\n        // Store fetched data in localStorage\n        localStorage.setItem('cachedData', JSON.stringify({\n          data: responseData,\n          lastFetchTime: new Date()\n        }));\n      } catch (error) {\n        // Handle errors\n        this.setState({\n          isLoading: false,\n          error: error.message\n        });\n      }\n    };\n    this.state = {\n      data: null,\n      isLoading: false,\n      error: null,\n      lastFetchTime: null\n    };\n  }\n  componentDidMount() {\n    const cachedData = localStorage.getItem('cachedData');\n    if (cachedData) {\n      const {\n        data,\n        lastFetchTime\n      } = JSON.parse(cachedData);\n      this.setState({\n        data,\n        lastFetchTime\n      });\n    }\n    // Fetch data only if it hasn't been fetched before or if it's older than 5 minutes\n    if (!this.state.data || this.isDataStale()) {\n      this.fetchData();\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    // Prevent unnecessary re-renders if the component's state hasn't changed\n    return this.state.data !== nextState.data || this.state.isLoading !== nextState.isLoading || this.state.error !== nextState.error;\n  }\n  isDataStale() {\n    // Check if the data is older than 5 minutes\n    const currentTime = new Date();\n    return (currentTime - new Date(this.state.lastFetchTime)) / 1000 > 300;\n  }\n  render() {\n    const {\n      data,\n      isLoading,\n      error\n    } = this.state;\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 20\n      }, this);\n    }\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"section inner-page\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n              children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n                href: \"/\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n                active: true,\n                children: \"FAQ's\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 mb-md-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"title page-title\",\n                children: \"FAQ's\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"faq-wrapper mt-3\",\n                children: data && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"faq-item\",\n                    id: item.id,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"faq-title\",\n                      children: item.question\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"faq-body\",\n                      children: item.answer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 53\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\nFAQ.propTypes = {};\nexport default FAQ;","map":{"version":3,"names":["React","Component","Header","Footer","Link","globalVar","Container","Breadcrumb","jsxDEV","_jsxDEV","Fragment","_Fragment","FAQ","constructor","fetchData","setState","isLoading","response","fetch","url","ok","Error","responseData","json","data","lastFetchTime","Date","error","localStorage","setItem","JSON","stringify","message","state","componentDidMount","cachedData","getItem","parse","isDataStale","shouldComponentUpdate","nextProps","nextState","currentTime","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Item","href","active","map","item","index","id","question","answer","propTypes"],"sources":["D:/Urdu IT Acedmy/uitareact/src/FAQ/FAQ.js"],"sourcesContent":["// import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport Header from '../Header/Header'\r\nimport Footer from '../Footer/Footer'\r\nimport { Link } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './FAQ.scss'\r\nimport globalVar from '../globalVar';\r\n\r\n//Bootstrap\r\nimport { Container, Breadcrumb } from 'react-bootstrap';\r\n\r\n\r\nexport class FAQ extends Component {\r\n    static propTypes = {}\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: null,\r\n            isLoading: false,\r\n            error: null,\r\n            lastFetchTime: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cachedData = localStorage.getItem('cachedData');\r\n        if (cachedData) {\r\n            const { data, lastFetchTime } = JSON.parse(cachedData);\r\n            this.setState({ data, lastFetchTime });\r\n        }\r\n        // Fetch data only if it hasn't been fetched before or if it's older than 5 minutes\r\n        if (!this.state.data || this.isDataStale()) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // Prevent unnecessary re-renders if the component's state hasn't changed\r\n        return this.state.data !== nextState.data ||\r\n            this.state.isLoading !== nextState.isLoading ||\r\n            this.state.error !== nextState.error;\r\n    }\r\n\r\n    isDataStale() {\r\n        // Check if the data is older than 5 minutes\r\n        const currentTime = new Date();\r\n        return (currentTime - new Date(this.state.lastFetchTime)) / 1000 > 300;\r\n    }\r\n\r\n    fetchData = async () => {\r\n        // Set loading state\r\n        this.setState({ isLoading: true });\r\n\r\n        try {\r\n            // Make API call\r\n            const response = await fetch(globalVar.url + 'faq');\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            // Parse JSON response\r\n            const responseData = await response.json();\r\n\r\n            // Update component state with fetched data and last fetch time\r\n            this.setState({\r\n                data: responseData.data,\r\n                isLoading: false,\r\n                lastFetchTime: new Date(),\r\n                error: null\r\n            });\r\n\r\n            // Store fetched data in localStorage\r\n            localStorage.setItem('cachedData', JSON.stringify({\r\n                data: responseData,\r\n                lastFetchTime: new Date()\r\n            }));\r\n        } catch (error) {\r\n            // Handle errors\r\n            this.setState({\r\n                isLoading: false,\r\n                error: error.message\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { data, isLoading, error } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <div>Loading...</div>;\r\n        }\r\n\r\n        if (error) {\r\n            return <div>Error: {error}</div>;\r\n        }\r\n\r\n        return (\r\n\r\n            <>\r\n                <main>\r\n                    {/* <Header /> */}\r\n\r\n                    <section className=\"section inner-page\">\r\n                        <Container className=\"\">\r\n                            <Breadcrumb>\r\n                                <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n                                <Breadcrumb.Item active>FAQ's</Breadcrumb.Item>\r\n                            </Breadcrumb>\r\n\r\n                            <div className='mb-4 mb-md-5'>\r\n                                {/* <h1 className=\"title page-title\">Help</h1> */}\r\n                                <h1 className=\"title page-title\">FAQ's</h1>\r\n\r\n                                {/* <h2 className=\"subtitle\">Useful Links</h2> */}\r\n\r\n                                <div className=\"faq-wrapper mt-3\">\r\n                                    {data && (\r\n                                        <div>\r\n                                            {data.map((item, index) => (\r\n                                                <div className=\"faq-item\" key={index} id={item.id}>\r\n                                                    <div className=\"faq-title\">{item.question}</div>\r\n                                                    <div className=\"faq-body\">{item.answer}</div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Container>\r\n                    </section>\r\n                    {/* <Footer /> */}\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FAQ"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}